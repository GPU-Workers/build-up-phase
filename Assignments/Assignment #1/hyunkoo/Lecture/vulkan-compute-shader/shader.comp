#version 450

struct Particle {
	vec2 position;
	vec2 velocity;
    vec4 color;
};

layout (binding = 0) uniform ParameterUBO {
    float deltaTime;
} ubo;

layout(std430, binding = 1) buffer ParticleSSBOInOut {
   Particle particles[];
};


layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() 
{
    uint index = gl_GlobalInvocationID.x;  

    Particle particle_prev = particles[index];
    
    Particle particle_new;
    particle_new.position = particle_prev.position + particle_prev.velocity * ubo.deltaTime;
    particle_new.velocity = particle_prev.velocity;

    // Flip movement at window border
    if ((particle_new.position.x <= -1.0) || (particle_new.position.x >= 1.0)) {
        particle_new.velocity.x = -particle_new.velocity.x;
    }
    if ((particle_new.position.y <= -1.0) || (particle_new.position.y >= 1.0)) {
        particle_new.velocity.y = -particle_new.velocity.y;
    }

    particles[index] = particle_new;
}